# GlobalIT Education Web Application - Production Environment Template
# Copy this file to .env for production deployment

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MySQL Database URL (Required for Production)
DATABASE_URL=mysql+pymysql://username:password@mysql-server:3306/globalit_education_prod

# MySQL SSL Configuration (Production Security)
MYSQL_SSL_DISABLED=false                    # Enable SSL (default: false)
MYSQL_SSL_VERIFY_CERT=true                  # Verify server certificate (default: true) 
MYSQL_SSL_VERIFY_IDENTITY=true              # Verify server identity (default: true)

# MySQL SSL Certificate Paths (Optional - for mutual TLS authentication)
# MYSQL_SSL_CA=/path/to/ca-cert.pem         # Certificate Authority file
# MYSQL_SSL_CERT=/path/to/client-cert.pem   # Client certificate file
# MYSQL_SSL_KEY=/path/to/client-key.pem     # Client private key file

# =============================================================================
# FLASK APPLICATION CONFIGURATION
# =============================================================================

# Flask Environment (CRITICAL: Set to 'production' for production deployment)
FLASK_ENV=production

# Secret Key (CRITICAL: Change this to a strong, unique secret key!)
SECRET_KEY=your-super-secure-secret-key-here-change-this-in-production

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Enable secure cookies (Set to true when using HTTPS)
SESSION_COOKIE_SECURE=true

# CSRF Protection
WTF_CSRF_ENABLED=true

# =============================================================================
# EMAIL CONFIGURATION (Optional)
# =============================================================================

# Email settings for notifications
# MAIL_SERVER=smtp.gmail.com
# MAIL_PORT=587
# MAIL_USE_TLS=true
# MAIL_USERNAME=your-email@gmail.com
# MAIL_PASSWORD=your-app-password

# =============================================================================
# SMS CONFIGURATION (Optional) 
# =============================================================================

# SMS API settings for notifications
# SMS_API_KEY=your-sms-api-key
# SMS_API_URL=https://api.sms-provider.com/send

# =============================================================================
# CLOUD PROVIDER SPECIFIC EXAMPLES
# =============================================================================

## AWS RDS MySQL Example:
# DATABASE_URL=mysql+pymysql://admin:password@globalit-db.abc123.us-east-1.rds.amazonaws.com:3306/globalit_education_prod
# MYSQL_SSL_VERIFY_CERT=true
# MYSQL_SSL_VERIFY_IDENTITY=true
# # AWS RDS uses server-side SSL certificates automatically

## Google Cloud SQL Example:
# DATABASE_URL=mysql+pymysql://root:password@35.123.456.789:3306/globalit_education_prod  
# MYSQL_SSL_CA=/path/to/server-ca.pem
# MYSQL_SSL_CERT=/path/to/client-cert.pem
# MYSQL_SSL_KEY=/path/to/client-key.pem

## Azure Database for MySQL Example:
# DATABASE_URL=mysql+pymysql://admin@servername:password@servername.mysql.database.azure.com:3306/globalit_education_prod
# MYSQL_SSL_VERIFY_CERT=true
# # Azure enforces SSL by default

## DigitalOcean Managed Database Example:
# DATABASE_URL=mysql+pymysql://doadmin:password@db-mysql-cluster-do-user-12345-0.db.ondigitalocean.com:25060/globalit_education_prod?ssl-mode=REQUIRED
# MYSQL_SSL_CA=/path/to/ca-certificate.crt

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================

# Before deploying to production, ensure:
# [ ] Changed SECRET_KEY to a strong, unique value
# [ ] Set FLASK_ENV=production  
# [ ] Configured DATABASE_URL with correct MySQL credentials
# [ ] SSL certificates are properly configured (if using custom certificates)
# [ ] Tested SSL connection with test_mysql_ssl.py
# [ ] Set SESSION_COOKIE_SECURE=true (when using HTTPS)
# [ ] MySQL user has appropriate privileges (not root/admin if possible)
# [ ] Network security (firewall/VPC) is configured
# [ ] Backup strategy is in place
# [ ] Monitoring and alerting is configured
# [ ] SSL certificate expiration monitoring is set up

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If you encounter SSL issues:
# 1. For development/testing only: Set MYSQL_SSL_DISABLED=true
# 2. Check MySQL server SSL configuration: SHOW VARIABLES LIKE '%ssl%';
# 3. Verify certificate files exist and have correct permissions (644 for certs, 600 for keys)
# 4. Test connection with: python test_mysql_ssl.py
# 5. Review logs for SSL-related error messages
# 6. Refer to MYSQL_SSL_CONFIGURATION_GUIDE.md for detailed troubleshooting